// Generated by CoffeeScript 1.3.3
(function() {
  var T, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _ = require("underscore");

  _.mixin(require("underscore.string"));

  T = require("../TermUI");

  T.Button = (function(_super) {

    __extends(Button, _super);

    function Button(opts) {
      var _ref, _ref1, _ref2, _ref3;
      Button.__super__.constructor.call(this, opts);
      this.fg = (_ref = this.options.fg) != null ? _ref : T.C.w;
      this.bg = (_ref1 = this.options.fg) != null ? _ref1 : T.C.b;
      this.label = (_ref2 = this.options.label) != null ? _ref2 : '';
      this.labelAnchor = (_ref3 = this.options.labelAnchor) != null ? _ref3 : 5;
    }

    Button.prototype.draw = function() {
      var align, emptyStr, labelRow, labelStr, y, _i, _ref, _ref1;
      T.fg(this.fg).bg(this.bg).pos(this.bounds.x, this.bounds.y);
      align = ['lpad', 'rpad', 'center'][this.labelAnchor % 3];
      labelStr = _[align](this.label, this.bounds.w, ' ');
      if (this.bounds.h > 1) {
        emptyStr = _.pad(' ', this.bounds.w, ' ');
      }
      switch (((this.labelAnchor - 1) / 3) | 0) {
        case 0:
          labelRow = this.bounds.y + this.bounds.h - 1;
          break;
        case 1:
          labelRow = this.bounds.y + (this.bounds.h / 2) | 0;
          break;
        case 2:
          labelRow = this.bounds.y;
      }
      for (y = _i = _ref = this.bounds.y, _ref1 = this.bounds.y + this.bounds.h - 1; _ref <= _ref1 ? _i <= _ref1 : _i >= _ref1; y = _ref <= _ref1 ? ++_i : --_i) {
        T.pos(this.bounds.x, y);
        if (y === labelRow) {
          T.out(labelStr);
        } else {
          T.out(emptyStr);
        }
      }
      return T.fg(T.C.x).bg(T.C.x).end();
    };

    return Button;

  })(T.Widget);

}).call(this);
