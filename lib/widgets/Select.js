// Generated by CoffeeScript 1.6.1
(function() {
  var B, T, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _ = require("underscore");

  _.mixin(require("underscore.string"));

  T = require("../TermUI");

  B = require("../boxChars");

  T.Select = (function(_super) {

    __extends(Select, _super);

    function Select(opts) {
      var _ref;
      Select.__super__.constructor.call(this, opts);
      this.activeItem = (_ref = opts.activeItem) != null ? _ref : false;
    }

    Select.prototype._drawRow = function(x, y, content, index) {
      var bg;
      if (this.activeItem === index) {
        bg = this.contentColor;
        this.contentColor = T.C.k;
        T.saveBg().bg(bg);
        Select.__super__._drawRow.call(this, x, y, content);
        T.restoreBg();
        this.contentColor = bg;
        return this.emit("change", this.activeItem, this.content[this.activeItem]);
      } else {
        return Select.__super__._drawRow.call(this, x, y, content);
      }
    };

    Select.prototype.onKey_up = function() {
      if (this.activeItem > 0) {
        this.activeItem--;
      }
      return Select.__super__.onKey_up.call(this);
    };

    Select.prototype.onKey_down = function() {
      if (this.activeItem < this.content.length - 1) {
        this.activeItem++;
      }
      return Select.__super__.onKey_down.call(this);
    };

    return Select;

  })(T.Box);

}).call(this);
